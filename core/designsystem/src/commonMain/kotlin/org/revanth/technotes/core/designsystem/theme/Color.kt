/*
 * Copyright 2025 Mifos Initiative
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 * See See https://github.com/openMF/kmp-project-template/blob/main/LICENSE
 */
package org.revanth.technotes.core.designsystem.theme

import androidx.compose.ui.graphics.Color

val primaryLight = Color(0xFF1800B1)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF403CD8)
val onPrimaryContainerLight = Color(0xFFFDF9FF)
val secondaryLight = Color(0xFF575899)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFBEBEFF)
val onSecondaryContainerLight = Color(0xFF2D2D6C)
val tertiaryLight = Color(0xFF5C0068)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFF8E1E9D)
val onTertiaryContainerLight = Color(0xFFFFF7FA)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFFCF8FF)
val onBackgroundLight = Color(0xFF1B1B24)
val surfaceLight = Color(0xFFFCF8FF)
val onSurfaceLight = Color(0xFF1B1B24)
val surfaceVariantLight = Color(0xFFE3E0F4)
val onSurfaceVariantLight = Color(0xFF464555)
val outlineLight = Color(0xFF777587)
val outlineVariantLight = Color(0xFFC7C4D8)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF302F39)
val inverseOnSurfaceLight = Color(0xFFF2EFFC)
val inversePrimaryLight = Color(0xFFC1C1FF)
val surfaceDimLight = Color(0xFFDBD8E5)
val surfaceBrightLight = Color(0xFFFCF8FF)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFF5F2FF)
val surfaceContainerLight = Color(0xFFEFECF9)
val surfaceContainerHighLight = Color(0xFFEAE6F3)
val surfaceContainerHighestLight = Color(0xFFE4E1EE)

val primaryDark = Color(0xFFC1C1FF)
val onPrimaryDark = Color(0xFF1600A8)
val primaryContainerDark = Color(0xFF2416C1)
val onPrimaryContainerDark = Color(0xFFCFCEFF)
val secondaryDark = Color(0xFFC1C1FF)
val onSecondaryDark = Color(0xFF282867)
val secondaryContainerDark = Color(0xFF383878)
val onSecondaryContainerDark = Color(0xFFD2D0FF)
val tertiaryDark = Color(0xFFFCAAFF)
val onTertiaryDark = Color(0xFF580064)
val tertiaryContainerDark = Color(0xFF6F007E)
val onTertiaryContainerDark = Color(0xFFFFBDFF)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF13131B)
val onBackgroundDark = Color(0xFFE4E1EE)
val surfaceDark = Color(0xFF13131B)
val onSurfaceDark = Color(0xFFE4E1EE)
val surfaceVariantDark = Color(0xFF464555)
val onSurfaceVariantDark = Color(0xFFC7C4D8)
val outlineDark = Color(0xFF908FA1)
val outlineVariantDark = Color(0xFF464555)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE4E1EE)
val inverseOnSurfaceDark = Color(0xFF302F39)
val inversePrimaryDark = Color(0xFF4946E0)
val surfaceDimDark = Color(0xFF13131B)
val surfaceBrightDark = Color(0xFF393842)
val surfaceContainerLowestDark = Color(0xFF0D0D16)
val surfaceContainerLowDark = Color(0xFF1B1B24)
val surfaceContainerDark = Color(0xFF1F1F28)
val surfaceContainerHighDark = Color(0xFF292932)
val surfaceContainerHighestDark = Color(0xFF34343D)
